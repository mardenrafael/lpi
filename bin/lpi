#!/bin/bash


if [ -z "$PROJECT_ROOT" ]; then
    echo "Erro ao ler a raiz do projeto. Você executou \"source ./bin/config.sh\"?" >&2
    exit 1
fi

compose_file_name="docker-compose.dev.yaml"
compose_file_path="${PROJECT_ROOT}/${compose_file_name}"
project_version=$(jq -r ".version" "${PROJECT_ROOT}/package.json")

exibir_cabecalho() {
    echo "########## LPI ##########"
}

exibir_ajuda() {
    if [ ! -e "${PROJECT_ROOT}/package.json" ]; then
        echo "Não foi possível encontrar o arquivo package.json"
        exit 1
    fi
    
    exibir_cabecalho
    echo ""
    echo "Cli para facilitar o gerenciamento de containers docker e dependencias para o desenvolvimento aplicativo"
    echo ""
    echo "Versão do projeto:        ${project_version}"
    echo "Pasta raiz do projeto:    ${PROJECT_ROOT}"
    echo ""
    echo "O Lpi NÃO pode ser executado dentro de um container docker, deve ser executado fora apenas para ajudar o gerenciamento dos containers"
    echo ""
    echo "Sub-comandos:"
    echo "  up                  Inicia a aplicação com a configuração do arquivo docker-compose.dev.yaml"
    echo "  down                Para a aplicação com a configuração do arquivo docker-compose.dev.yaml"
    echo "  ps                  Inspeciona os container em execução com a configuração do arquivo docker-compose.dev.yaml"
    echo "  install | i         Instala dependencia usando npm"
    echo ""
    echo "Opções:"
    echo "  -h          Exibe o menu de ajuda"
    echo "  -v          Exibe a versão do projeto"
}

exibir_versao() {
    
    exibir_cabecalho
    echo ""
    echo "Versão do projeto:        ${project_version}"
    
}

if [ ! -e "$compose_file_path" ]; then
    echo "Não foi possível encontrar o arquivo ${compose_file_name}"
    exit 1
fi

if [ ! -z "$1" ]; then
    case $1 in
        -h)
            exibir_ajuda
            exit 0
            ;;
        -v)
            exibir_versao
            exit 0
        ;;
    esac
fi

case $1 in
    up)
        echo "Iniciando containers com configuração do ${compose_file_name}"
        docker compose -f "$compose_file_path" up --detach --wait
        if [ $? -eq 0 ]; then
            echo "Containers iniciados com sucesso."
            exit 0
        else
            echo "Erro ao iniciar containers, por favor olhe os logs dos containers."
            exit 1
        fi
        
        ;;
    down)
        echo "Parando containers com configuração do ${compose_file_name}"
        docker compose -f "$compose_file_path" down
        echo "Containers parados com sucesso."
        ;;
    ps)
        docker compose -f "$compose_file_path" ps
        ;;
    install|i)
        echo "Instalando dependendia ${2} com npm"
        npm install $2 &> /dev/null

        if [ $? -eq 0 ]; then
            echo "Instalado com sucesso"
            exit 0
        else
            echo "Erro ao instalar dependencia com o nome ${2}"
            exit 1
        fi
        ;;
    restart)
        echo "Reiniciando containers"
        docker compose -f "$compose_file_path" restart
        if [ $? -eq 0 ]; then
            echo "Containers reiniciados com sucesso."
            exit 0
        else
            echo "Erro ao reiniciar containers."
            exit 1
        fi
    ;;
    *)
        echo "Argumento desconhecido. Digite lpi -h para obter ajuda."
        exit 1
        ;;
esac